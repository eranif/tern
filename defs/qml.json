{
  "!name": "QML",
  "!define": {
    "font": {
      "family": "string",
      "bold": "bool",
      "italic": "bool",
      "underline": "bool",
      "pointSize": "number",
      "pixelSize": "number",
      "weight": "number",
      "overline": "bool",
      "strikeout": "bool",
      "capitalization": "number",
      "letterSpacing": "number",
      "wordSpacing": "number"
    },
    "color": {
      "r": "number",
      "g": "number",
      "b": "number",
      "a": "number"
    },
    "point": {
      "x": "number",
      "y": "number"
    },
    "quaternion": {
      "scalar": "number",
      "x": "number",
      "y": "number",
      "z": "number"
    },
    "rect": {
      "x": "number",
      "y": "number",
      "width": "number",
      "height": "number"
    },
    "size": {
      "width": "number",
      "height": "number"
    },
    "vector2d": {
      "x": "number",
      "y": "number"
    },
    "vector3d": {
      "x": "number",
      "y": "number",
      "z": "number"
    },
    "vector4d": {
      "x": "number",
      "y": "number",
      "z": "number",
      "w": "number"
    }
  },
  "gc": {
    "!type": "fn()",
    "!doc": "This function is specific to QML, and provides a way to manually trigger garbage collection."
  },
  "print": {
    "!type": "fn(value: string)",
    "!doc": "Provides a simple way to output information to the console."
  },
  "console": {
    "log": {
      "!type": "fn(value: string)",
      "!doc": "Print debugging information to the console.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "debug": {
      "!type": "fn(value: string)",
      "!doc": "Print debugging information to the console.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "info": {
      "!type": "fn(value: string)",
      "!doc": "Print debugging information to the console.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "warn": {
      "!type": "fn(value: string)",
      "!doc": "Print debugging information to the console.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "assert": {
      "!type": "fn(expression: bool, message: string)",
      "!doc": "console.assert tests that an expression is true. If not, it will write an optional message to the console and print the stack trace.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "time": {
      "!type": "fn(identifier: string)",
      "!doc": "console.time and console.timeEnd log the time (in milliseconds) that was spent between the calls.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "timeEnd": {
      "!type": "fn(identifier: string)",
      "!doc": "console.time and console.timeEnd log the time (in milliseconds) that was spent between the calls.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "trace": {
      "!type": "fn()",
      "!doc": "console.trace prints the stack trace of the JavaScript execution at the point where it was called.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "profile": {
      "!type": "fn()",
      "!doc": "console.profile turns on the QML and JavaScript profilers. Nested calls are not supported and a warning will be printed to the console.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "profileEnd": {
      "!type": "fn()",
      "!doc": "console.profileEnd turns off the QML and JavaScript profilers.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    },
    "exception": {
      "!type": "fn()",
      "!doc": "console.exception prints an error message together with the stack trace of JavaScript execution at the point where it is called.",
      "!url": "http://doc.qt.io/qt-5/qtquick-debugging.html#console-api"
    }
  },
  "Qt": {
    "application": {
      "!type": "number",
      "!doc": "The application object provides access to global application state properties shared by many QML components.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#application-prop"
    },
    "inputMethod": {
      "!type": "?",
      "!doc": "The inputMethod object allows access to application's QInputMethod object and all its properties and slots.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#inputMethod-prop"
    },
    "platform": {
      "!type": "string",
      "!doc": "The platform object provides info about the underlying platform.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#platform-prop"
    },
    "atob": {
      "!type": "fn(data: ?) -> string",
      "!doc": "ASCII to binary - this function returns a base64 decoding of data.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#atob-method"
    },
    "binding": {
      "!type": "fn(function: ?) -> fn",
      "!doc": "Returns a JavaScript object representing a property binding.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#binding-method"
    },
    "btoa": {
      "!type": "fn(data: ?) -> string",
      "!doc": "Binary to ASCII - this function returns a base64 encoding of data.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#btoa-method"
    },
    "colorEqual": {
      "!type": "fn(color: color, string: string) -> bool",
      "!doc": "Returns true if both lhs and rhs yield equal color values.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#colorEqual-method"
    },
    "createComponent": {
      "!type": "fn(url: string, mode: number, parent: ?) -> ?",
      "!doc": "Returns a Component object created using the QML file at the specified url, or null if an empty string was given.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#createComponent-method"
    },
    "createQmlObject": {
      "!type": "fn(qml: string, parent: ?, filepath: string) -> ?",
      "!doc": "Returns a new object created from the given string of QML which will have the specified parent, or null if there was an error in creating the object.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#createQmlObject-method"
    },
    "darker": {
      "!type": "fn(baseColor: color, factor: number) -> color",
      "!doc": "Returns a color darker than baseColor by the factor provided.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#darker-method"
    },
    "font": {
      "!type": "fn(fontSpecifier: ?) -> font",
      "!doc": "Returns a Font with the properties specified in the fontSpecifier object or the nearest matching font.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#font-method"
    },
    "fontFamilies": {
      "!type": "fn() -> [string]",
      "!doc": "Returns a list of the font families available to the application.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#fontFamilies-method"
    },
    "formatDate": {
      "!type": "fn(date: ?, format: ?) -> string",
      "!doc": "Returns a string representation of date, optionally formatted according to format.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#formatDate-method"
    },
    "formatDateTime": {
      "!type": "fn(dateTime: ?, format: ?) -> string",
      "!doc": "Returns a string representation of datetime, optionally formatted according to format.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#formatDateTime-method"
    },
    "formatTime": {
      "!type": "fn(time: ?, format: ?) -> string",
      "!doc": "Returns a string representation of time, optionally formatted according to format.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#formatTime-method"
    },
    "hsla": {
      "!type": "fn(hue: number, saturaion: number, lightness: number, alpha: number) -> ?",
      "!doc": "Returns a color with the specified hue, saturation, lightness and alpha components.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#hsla-method"
    },
    "include": {
      "!type": "fn(url: string, callback: ?) -> ?",
      "!doc": "Includes another JavaScript file. This method can only be used from within JavaScript files, and not regular QML files.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#include-method"
    },
    "isQtObject": {
      "!type": "fn(object: ?)-> bool",
      "!doc": "Returns true if object is a valid reference to a Qt or QML object, otherwise false.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#isQtObject-method"
    },
    "lighter": {
      "!type": "fn(baseColor: ?, factor: number) -> ?",
      "!doc": "Returns a color lighter than baseColor by the factor provided.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#lighter-method"
    },
    "locale": {
      "!type": "fn(name: string) -> ?",
      "!doc": "Returns a JS object representing the locale with the specified name.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#locale-method"
    },
    "md5": {
      "!type": "fn(data: ?) -> string",
      "!doc": "Returns a hex string of the md5 hash of data.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#md5-method"
    },
    "matrix4x4": {
      "!type": "fn(m11: number, m12: number, m13: number, m14: number, m21: number, m22: number, m23: number, m24: number, m31: number, m32: number, m33: number, m34: number, m41: number, m42: number, m43: number, m44: number)",
      "!doc": "Returns a Matrix4x4 with the specified values. Alternatively, the function may be called with a single argument where that argument is a JavaScript array which contains the sixteen matrix values.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#matrix4x4-method"
    },
    "openUrlExternally": {
      "!type": "fn(target: string) -> bool",
      "!doc": "Attempts to open the specified target url in an external application, based on the user's desktop preferences. Returns true if it succeeds, and false otherwise.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#openUrlExternally-method"
    },
    "point": {
      "!type": "fn(x: number, y: number) -> point",
      "!doc": "Returns a Point with the specified x and y coordinates.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#point-method"
    },
    "qsTr": {
      "!type": "fn(sourceText: string, disambiguation: string, n: number) -> string",
      "!doc": "Returns a translated version of sourceText, optionally based on a disambiguation string and value of n for strings containing plurals; otherwise returns sourceText itself if no appropriate translated string is available.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTr-method"
    },
    "qsTrId": {
      "!type": "fn(id: string, n: number) -> string",
      "!doc": "Returns a translated string identified by id. If no matching string is found, the id itself is returned.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTrId-method"
    },
    "qsTrIdNoOp": {
      "!type": "fn(id: string) -> string",
      "!doc": "Marks id for dynamic translation.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTrIdNoOp-method"
    },
    "qsTrNoOp": {
      "!type": "fn(sourceText: string, disambiguation: string) -> string",
      "!doc": "Marks sourceText for dynamic translation; i.e, the stored sourceText will not be altered.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTrNoOp-method"
    },
    "qsTranslate": {
      "!type": "fn(context: string, sourceText: string, disambiguation: string, n: number)",
      "!doc": "Returns a translated version of sourceText within the given context, optionally based on a disambiguation string and value of n for strings containing plurals; otherwise returns sourceText itself if no appropriate translated string is available.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTranslate-method"
    },
    "qsTranslateNoOp": {
      "!type": "fn(context: string, sourceText: string, disambiguation: string) -> string",
      "!doc": "Marks sourceText for dynamic translation in the given context; i.e, the stored sourceText will not be altered.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTranslateNoOp-method"
    },
    "quaternion": {
      "!type": "fn(scalar: number, x: number, y: number, z: number) -> quaternion",
      "!doc": "Returns a Quaternion with the specified scalar, x, y, and z.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#quaternion-method"
    },
    "quit": {
      "!type": "fn()",
      "!doc": "This function causes the QQmlEngine::quit() signal to be emitted. ",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#quit-method"
    },
    "rect": {
      "!type": "fn(x: number, y: number, width: number, height: number) -> rect",
      "!doc": "Returns a rect with the top-left corner at x, y and the specified width and height.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#rect-method"
    },
    "resolvedUrl": {
      "!type": "fn(url: ?) -> ?",
      "!doc": "Returns url resolved relative to the URL of the caller.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#resolvedUrl-method"
    },
    "rgba": {
      "!type": "fn(red: number, green: number, blue: number, alpha: number) -> color",
      "!doc": "Returns a color with the specified red, green, blue and alpha components. All components should be in the range 0-1 inclusive.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#rgba-method"
    },
    "size": {
      "!type": "fn(width: number, height: number) -> size",
      "!doc": "Returns a Size with the specified width and height.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#size-method"
    },
    "tint": {
      "!type": "fn(baseColor: color, tintColor: color) -> color",
      "!doc": "This function allows tinting one color with another.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#tint-method"
    },
    "vector2d": {
      "!type": "fn(x: number, y: number) -> vector2d",
      "!doc": "Returns a Vector2D with the specified x and y.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#vector2d-method"
    },
    "vector3d": {
      "!type": "fn(x: number, y: number, z: number) -> vector3d",
      "!doc": "Returns a Vector3D with the specified x, y and z.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#vector3d-method"
    },
    "vector4d": {
      "!type": "fn(x: number, y: number, z: number, w: number) -> vector4d",
      "!doc": "Returns a Vector4D with the specified x, y, z and w.",
      "!url": "http://doc.qt.io/qt-5/qml-qtqml-qt.html#vector4d-method"
    }
  }
}
